package com.klef.ecom.service;

import com.klef.ecom.model.Event;
import com.klef.ecom.repository.EventRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class EventServiceImpl implements EventService {

    @Autowired
    private EventRepository eventRepository;

    @Override
    public String addEvent(Event event) {
        eventRepository.save(event);
        return "Event added successfully!";
    }

    @Override
    public String updateEvent(Long id, Event updatedEvent) {
        Optional<Event> existingOpt = eventRepository.findById(id);
        if (!existingOpt.isPresent()) {
            return "Event not found!";
        }

        Event event = existingOpt.get();

        // Update fields only if provided
        event.setEventName(updatedEvent.getEventName() != null ? updatedEvent.getEventName() : event.getEventName());
        event.setVenue(updatedEvent.getVenue() != null ? updatedEvent.getVenue() : event.getVenue());
        event.setDescription(updatedEvent.getDescription() != null ? updatedEvent.getDescription() : event.getDescription());
        event.setStartDate(updatedEvent.getStartDate() != null ? updatedEvent.getStartDate() : event.getStartDate());
        event.setEndDate(updatedEvent.getEndDate() != null ? updatedEvent.getEndDate() : event.getEndDate());

        eventRepository.save(event);
        return "Event updated successfully!";
    }

    @Override
    public String deleteEvent(Long id) {
        if (!eventRepository.existsById(id)) {
            return "Event not found!";
        }
        eventRepository.deleteById(id);
        return "Event deleted successfully!";
    }

    @Override
    public List<Event> getAllEvents() {
        return eventRepository.findAll();
    }
}
